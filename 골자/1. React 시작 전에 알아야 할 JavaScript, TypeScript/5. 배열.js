// 여러 데이터를 세트로 묶은 배열에 대해 알아보자.
// 배열을 배울 단계부터 이제 점점 어려워질것.
// (실습)
const mon = '월';
const twe = '화';
const wed = '수';
const thu = '목';
const fri = '금';
const sat = '토';
const sun = '일';

console.log(mon, twe, wed, thu, fri, sat, sun);
// 요일을 저장해보자. 요일은 총 7개다
// 지금까지 했던 방식으로 이렇게 하나하나 저장할 것
// 이젠 한꺼번에 저장하는 방법을 배워보자

const daysOfWeek = ['월', '화', '수', '목', '금'. '토', '일'];
// 이걸 배열(array) 라고 한다. 
// 여러개의 data를 대괄호 [ ] 를 사용해 하나로 묶으면 배열
// 참고로, daysOfWeek 라고 변수 이름을 사용
// 변수는 이처럼 길게 지어도 좋으니깐 알아볼수 있도록 써야한다.

// (ppt)
// 변수 이름 짓는법을 잠시 설명하고 넘어간다.
// 변수 이름을 지을 때, 여러개 단어로 이어서 지을 경우 
	// 맨 첫글자는 소문자 
	// 띄어쓰기 하지 말고 이어서 쓸 것 
	// 이어지는 단어의 첫글자는 대문자 사용 
// 이렇게 이름지으면 마치 낙타같이 보여서, 
// 개발자들은 낙타법(camelCase) 라고 부른다.
// (다음)
// 개발자들이 가장 힘들어하는 일을 통계로 내보았는데,
// 이름짓는 일이 49%로 가장 힘들다고 했음
// 그만큼, 이름짓는걸 신경써야한다.

// (실습)
// 배열을 이루는 각각의 데이터: 요소(Element)
// 요소에 접근하려면 인덱스(index) 사용
// 배열 변수 옆에 대괄호를 쓴 숫자를 넣어줌
// 첫번째 요소인 '월' 을 가져와보자.
// [0]
// 컴퓨터는 인간과는 다르게, 숫자를 셀 때 0부터 시작한다.
// 그래서 인덱스 1은 '화'다.
// [1]
// 만약, 없는 인덱스를 입력하면 다음과 같이 뜬다.
// [7]
// undefined 는 정의되지 않았다는 뜻. 
// 즉, 우리는 인덱스 7, 인간 기준으로 8번째 데이터를 정의한 적이 없음
// 앞으로 undefined를 디버깅하면서 지겹도록 보게 될 것.

// (ppt)
// undefined 와 null 의 차이점
// undefined: 정의되지 않은 데이터를 말함
// null은 개발자가 일부러 비워둔 값

// (실습)
const daysOfWeek = ['월', '화', '수', '목', '금', '토', '일'];
// 배열의 요소는 const로 선언되었더라도 변경하거나 추가할 수 있음
// daysOfWeek 배열의 인덱스 0번, 즉 첫번째 데이터를 변경해보겠다.

const daysOfWeek = ['월', '화', '수', '목', '금', '토', '일'];
daysOfWeek[0] = 'ㅋㅋㅋ';
console.log(daysOfWeek);

// 배열과 나중에 배울 객체는 const 로 선언되어도 안의 내용을 바꿀 수 있음
// 추가도 가능함. push() 사용함
const daysOfWeek = ['월', '화', '수', '목', '금', '토', '일'];
daysOfWeek.push('새로운 요일!');
console.log(daysOfWeek);
// push를 사용해 추가함
// push 사용 도중 마침표 (.) 를 사용
// 잘 생각해보면 우리 콘솔로그에도 마침표가 있음
// 마침표는 객체에 접근할때 사용하는것인데 다음장에서 배울 

// 다른예제
const daysOfWeek = ['월', '화', '수', '목', '금', '토', '일'];
// 배열의 요소(element)를 바꿀 순 있어도, 배열 자체를 바꿀 순 없다
const daysOfWeek = ['월', '화', '수', '목', '금', '토', '일'];
daysOfWeek = ['크리스마스', '석가탄신일', '내 생일'];
// 에러 클릭
// cannot assign to daysofweek because it is a constant
// const로 선언되었기 때문. 
// 배열의 요소는 바꿀 수 있지만, 
// 배열로 선언된 변수에 다른 걸 집어넣을수는 없다.

// (다음예제)
const numbers = [1, 2, 3];
const trueOrFalse = [true, false];
const numbers2 = [
    4,
    numbers,
    2
];
console.log(numbers2);
// 문자열(스트링)뿐만 아니라, 타입은 어떤 것이든 배열의 요소가 될 수 있음
// 심지어 변수도 배열의 요소가 될 수 있음
// 배열 안에 배열이 또 있을수도 있음.
// 이걸 이차원배열, 배열안에배열안에배열이면 삼차원배열이라고 함
// 결과 출력. 배열안에 배열이 있음
// 다음과 같이 하나의 작업을 여러줄에 쓸 때,
// 칸을 띄워 보기좋게 만드는 작업을 '들여쓰기'라고 함
// 보통의 에디터는 탭을 누르면 스페이스 네칸으로 인식
// 배열 시작 괄호 앞에 엔터치고
// 마지막괄호는 따로 써줌
// 맨 마지막에 세미콜론 빼먹지말고
// 같은 레벨에 있으면 같은 칸을 유지해야됨
// 4와 numbers와 2는 같은 지위에 있는것임
// 그럼 인덱스라고 접근한다고 했는데, 3에 접근하려면 어떻게 해야될까?
// 인덱스를 두번 이어서 쓰면 됩니다
console.log(numbers2[1][2]);
// 결과는 3

// (ppt)
// 지금까지, 첫번째 데이터셋인 배열에 대해 배워보았다.
// 쭉 읽기