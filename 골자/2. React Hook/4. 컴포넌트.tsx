// (ppt)
// React에서 주요한 기술은 딱 두가지로 요약된다.
 
// 1. component
// 2. hook
 
// 그 중 첫번째인 컴포넌트에 대해 알아보자. 

// (다음)
// 컴포넌트란 무엇일까? 
// 영어사전에선 구성요소, 부품이라고 번역된다. 

// 그렇다. 컴포넌트는 부품이다. 
// 웹페이지를 여러 부분으로 나눴을 때 한 부분입니다

// (다음)
// HTML 시간에 배웠던 그림을 그대로 가져와보았습니다
// 시멘틱 태그를 설명할 때 썼는데
// 각각을 컴포넌트로 만들 계획이라고 칩시다

// 여기서 각각의 사각형은 모두 컴포넌트로 만들겁니다
// 컴포넌트 안에 컴포넌트가 있을 수 있습니다
// 섹션 밑에 보면 아티클이라고 있죠? 이것처럼
// 컴포넌트 안에 컴포넌트가 있을 수 있어요
// 이 경우엔 부모 자식으로 구분합니다
// 그리고 가장 중요한 설명인데
// 컴포넌트는 하나의 자바스크립트 함수가 될겁니다

// 어사이드 부분을 예로 들어볼게요
// 저 부분은 웹페이지에서 광고같은 덜 중요한 정보를 나타낼 때
// 쓰일 부분입니다
// 어사이드라는 시맨틱 태그 안에

// (다음)
// 다음과같이 어사이드라는 시맨틱 태그 안에
// 애드버타이즈먼트라는 광고를 담당할 컴포넌트를 만들고
// 광고 내용을 수정할 일이 있다면
// 페이지의 다른 모든 부분은 신경쓸 필요 없이
// 어디만 수정하면 되겠어요?
// 애드버타이즈먼트 컴포넌트만 수정하면 되겠죠

// 그리고 애드버타이즈먼트 컴포넌트를 이미 만들어두었기
// 때문에

// (다음)
// 재사용이 가능합니다
// 욕심이 많아서 광고를 여러군데 넣고싶을수도 있겠죠
// 그럼 애드버타이즈먼트는 매번 작성할 필요가 있을까요?
// 그럴 필요 없죠 이미 만들어놓은것을 쓰면 되니까요

// 이제 실제 코드를 살펴보겠습니다. 이론적인 부분이니
// 천천히 이해하면서 봐야해요
// 컴포넌트를 모르고 리액트를 알 수는 없기 때문에
// 확실히 알아둬야합니다

// (실습)
// 저번시간에 말했듯, 리액트 코딩의 시작은 App.tsx입니다
// 이 파일의 코드를 한번도 분석해본적이 없어요
// 지금 해보도록 할게요
// 첫번째 라인 임포트.
// 저번시간에 말했죠? 바깥에 있는 파일을 집어넣는다
// 지금은 뭘 집어넣어요?
// 디자인을 담당하는 css 파일을 집어넣죠
// 근데 그 씨에스에스 파일이 어디있는지
// 정확히 적어줘야합니다
// 맨 처음 마침표로 시작하죠? 점 찍고 시작하잖아요
// 이 쩜은, 현재 경로를 의미합니다
// 파일 위치 봅시다
// 앱 닷 티에스엑스는 어디있죠? 
// 에스알씨 디렉토리 안에 있죠
// 즉 앱 닷 티에스엑스의 현재 경로는
// 에스알씨라는 거에요
// 그 에스알씨에서 뭘 가져온다구요?
// 스타일스 닷 씨에스에스를 가져온다구요
// 이걸 어려운말로는 상대경로라고 합니다
// 이 코드와 똑같은 표현을 알아볼게요 

// import "./styles.css";
import "/src/styles.css";

// 맨 처음 슬래시는 루트, 즉 시작을 의미하고
// 거기서 어디로 들어간다구요? 에스알씨로 들어가서
// 그 안에 있는 스타일스 닷 시에스에스 로 가네요
// 어려운말로는 절대경로라고 합니다
// 내 위치를 기준으로 하면 상대경로
// 처음부터 기준으로 하면 절대경로에요

// 그리고 추가로 여러분들이 가끔
// 퍼블릭 폴더에 있는 이미지를 활용할 일도 있을건데
// 퍼블릭 폴더 안에 pictures 라는 디렉토리를 만들고
// 그 안에 제가 가지고 있는
// 리액트 훅 썸네일을 업로드할게요
// 픽쳐스 안에 잘 넣어주고
// 이미지 태그를 하나 만들어서
// 이미지 경로를 나타내는 src 경로를 표현하려면 어떻게
// 하면 되느냐, 다음과 같이
// 퍼블릭을 기준으로 경로를 잡아주면 됩니다
// 맨 처음에 슬래시 써도되고 안써도되고
// 픽쳐스 디렉토리 안에 있는
// 리액트 훅 썸네일 피엔지
// 잘 나오죠?
// 즉, 여러분의 프로젝트에 있는 이미지같은걸 가져다 쓸땐
// 퍼블릭 디렉토리를 루트, 즉 시작으로 가지는
// 절대경로로 계산해서 가져오면 된다는 뜻이에요

// 나중에 쓸 일이 있을거같아서 한번 써봤고
// 씨에스에스 파일 임포트할땐
// 확장자를 써줬는데
// 저번시간에 얘기했죠? 제이에스, 티에스, 티에스엑스
// 임포트할때는 확장자를 쓰지 않아요
// 세번째라인
// 엑스포트, 내보낸다는 뜻입니다
// 임포트의 반댓말입니다
// 앱 이라는 함수를 바깥으로 내보내겠다는 뜻입니다
// 근데 앱은 대문자로 시작하죠?
// 이게 컴포넌트입니다
// 대문자로 시작하는 함수
// 디폴트 써져있는거는 이것은
// 이 파일 전체에서 내보낼 변수나 함수가
// 즉, 익스포트할 변수나 함수가
// 딱 하나밖에 없을 때 써요
// 이걸 분리해서 쓸수도 있어요
// (맨 아랫쪽으로 분리)
// 근데 여기서 소괄호를 치면 에러가 납니다
// 왜? 소괄호는 옛날에 제가 한번 설명했는데
// 함수를 실행시킨다는 의미거든요
// 그래서 소괄호 빼줄게요
// 두 방법 중에 편한 방법으로 하면 되는데
// 보통은 하나밖에 없을때는
// 아까처럼 쭉 이어서 써줍니다.

// 임포트, 익스포트는 자바스크립트 배울 때
// 모듈 장에서 다뤄요
// 모듈을 우린 배운적 없어요
// 딱 하나의 파일만 가지고 작업했거든요 
// 피피티 잠깐 봅시다

// (피피티)
// 모듈이라는 새로운 단어가 나왔다고 겁먹고 도망가지 말고
// 쉽게 생각합시다
// 모듈은 자바스크립트 파일을 말합니다
// 우리가 만들 프로젝트에
// 딱 하나의 자바스크립트 파일만 있지는 않아요
// 리액트 타입스크립트 확장자가 티에스엑스라서
// 자바스크립트 아니잖아요 생각할수있는데
// 타입스크립트도 결국 자바스크립트고
// 심지어 타입스크립트 없이 리액트 개발하면
// 확장자가 제이에스 입니다
// 리액트라는 확장자는 존재하지 않아요
// 어쨌든, 내가 코딩중인 파일 말고
// 다른 자바스크립트 파일을 쓰고싶으면
// 임포트해야되고
// 내가 작업하고 있는 파일안에 코드를
// 다른 자바스크립트 파일에서 쓰게 만들고 싶으면
// 익스포트 해야됩니다
// 임포트는 그렇다치고
// 익스포트는 왜 하도록 만들었을까요
// 그냥 집어넣게 하고 다 쓰게 하면 안되나?
// 우리가 굳이 밝히고 싶지 않은 부분이 있을 수 있잖아요
// 보안상의 문제라던지 기타 다른문제때문에
// 내보내고싶은것만 지정해줄 상황이 있을 수 있기때문에
// 익스포트할 변수나 함수를 지정해주는겁니다
// 다시 실습으로 돌아가서 계속 봅시다

// (실습)
// 네번째줄부터 뭐가 나옵니까?
// 리턴값이 나오죠
// 소괄호 쳐줬네요 왜?
// 리턴값이 여러줄일때는 소괄호 칩니다
// 소괄호 닫고 세미콜론 찍구요
// 근데 자세히 보니깐 좀 이상하네요
// 자바스크립트 안에 에이치티엠엘 태그가 있잖아요
// 여러분이 만난 첫번째 리액트 문법입니다
// 이것은 자바스크립트도 아니고
// 타입스크립트도 아니고
// 에이치티엠엘도 아니에요
// 제이에스엑스라는 리액트 고유의 문법이에요
// 자바스크립트 안에 있는 에이치티엠엘이라고 
// 생각하시면 될거같아요
// 그러니깐 리액트 말고 이런식으로 쓰면
// 에러납니다.
// 여기서 컴포넌트에 대한 좀 더 정확한 정의를 
// 알 수 있어요
// 아까전에 간단하게 컴포넌트는 뭐라고 했어요?
// 화면을 이루는 부분이라고했죠?
// 좀 더 정확한 정의는 다음과 같습니다
// 컴포넌트는 HTML을 리턴하는 함수다

// (PPT)
// 이제까지 나온 컴포넌트에 대한 정의를 정리해보면
// 알아듣기 쉽게는 컴포넌트는 뭐다?
// 웹페이지를 쪼갠것입니다
// 좀 더 정확한 정의는?
// 웹페이지의 부분을 담당하는 함수구요
// 리액트에서 엄격한 정의는
// 에이치티엠엘을 리턴하는 함수입니다

// (실습)
// 이제 우리만의 컴포넌트를 만들어서 App.tsx 에
// 집어넣어보겠습니다
// 여러분이 직접 작성하는 첫 리액트 코드입니다
// 파일명은 메뉴 닷 티에스엑스라고 짓고
// src 디렉터리 안에 만들겠습니다
// 익스포트 디폴트 펑션 메뉴라고 써줬어요
// 컴포넌트 이름은 파일명과 똑같이 지어줄거에요
// 대문자로 시작하는 메뉴로 지어줄거에요
// 리턴하는데
// 소괄호 치고
// 항상 빈 태그를 먼저 써주세요

// 이걸 프래그먼트라고 합니다
// 왜냐면 리액트는 하나의 컴포넌트만 리턴하거든요
// 그래서 맨 위에 빈태그를 써주는겁니다
// 근데 앱 티에스액스에선 안썻잖아요
// 가서 볼까요?
// 최상위 태그가 뭡니까? 
// 디브 클래스네임 앱이죠?
// 이렇게 디브 태그가 최상위로 있기때문에
// 안써도 되는겁니다

// 다시 돌아와서
// 그 안에 메뉴를 써봅시다
// 유엘 하고
// 엘아이 한다음 별표 찍고 3해서
// 탭키누르면 세개가 생깁니다
// 짜장면 짬뽕 탕수육 써넣어줄게요

export default function Menu() {
  return (
    <>
      <ul>
        <li>짜장면</li>
        <li>짬뽕</li>
        <li>탕수육</li>
      </ul>
    </>
  );
}

// 이제 앱 닷 티에스엑스에서 메뉴 닷 티에스엑스를
// 임포트해보겠습니다
// 좀 더 정확하게 보기위해서
// 화면분할을 해볼게요
// 코드 샌드박스에선 옆에 보시면 화면분할 버튼이 있어요
// 누르면
// 앱 닷 티에스엑스, 메뉴 닷 티에스엑스 파일을
// 동시에 볼 수 있어요

// 이제 앱에서 임포트 하겠습니다
// 임포트 메뉴. 확장자 안쓴댓죠?
// 그런데 이렇게만 쓰면 안되요
// 뭘 가져올지를 써줘야됩니다
// 메뉴 컴포넌트를 가져올거에요
// 어디에서? from

// 메뉴 닷 티에스엑스에서 가져올게요
// 이제 임포트했으니깐 써야겠죠?
// 디브 클래스네임 앱 안에 있는걸 다 지우고
// 그 안에 메뉴 컴포넌트를 넣겠습니다.
// 컴포넌트 쓸때는, 다음과같이 태그 쓰듯이 씁니다
// 안에서 바로 닫아줄게요
// 이건 이거랑 같은 뜻입니다
<Menu></Menu>
// 축약해서 쓰는거에요
// 첫글자는 대문자로 씁니다. 
// 근데 여러분들한테 하나 말씀드릴게 있는데,
// 두번째 라인의 메뉴 있죠
// 이건 사실 메뉴를 가져온다는 뜻이 아니에요
// 무슨말이냐, 바로 보여드릴게요
// 알트 누른채로 클릭하면
// 다중커서 되거든요?
// 토마토라고 지어볼게요
// 어때요? 에러 안뜨죠?

// 즉, 우리는 메뉴 파일의
// 메뉴컴포넌트를 가져온게 아닙니다
// 근데 토마토는 우리가 만든적도 없는데?
// 이건 익스포트 디폴트와 관련있어요
// 아래 창 보면 익스포트 디폴트 써져있죠?
// 딱 하나만 내보낼때 디폴트 쓴다그랬죠?
// 그래서 임포트할때는 당연히
// 이거 하나만 가져오기때문에
// 우리가 따로 별명을 지어줄 수 있는거에요
// 근데 굳이 다르게 지어서 헷갈리게할필요가 없으니깐
// 컴포넌트 이름과 동일하게 메뉴라고 짓습니다

// 만약 익스포트 디폴트 상황이 아니라면
// 가져오고자하는 것의 이름을 정확히 써줘야됩니다
// 토마토는 어쨌든
// 드래그해서
// 컨트롤 디 해서
// 하면 똑같은 글자 선택되거든요?
// 바꿔줄게요 메뉴로
// 옆에 결과가 잘 나온게 보이죠?
// 여러분이 확실히 이해했는지 그림으로 점검해볼게요

// (피피티)
// 앱 닷 티에스엑스 파일에서
// 메뉴 컴포넌트를 집어넣으면
// 뭐랑 똑같습니까
// 두번째 그림이랑 똑같죠
// 메뉴 컴포넌트의 내용이
// 담기는겁니다
// 결과는 뭐가 나와요?
// 앱 안에
// 메뉴컴포넌트가 있는식으로
// 화면에 보이겠죠
// 이 경우에, 앱은 부모컴포넌트가 되고
// 메뉴는 자식컴포넌트가 되는겁니다
// 부모 자식이 되는거에요

// (실습)
// 이제 컴포넌트를 다른 방식으로 만들어볼게요
// 메뉴 닷 티에스엑스라는 파일을 따로 만들지 않고
// 앱 닷 티에스엑스에 직접 컴포넌트를 작성해볼게요
// 메뉴 닷 티에스엑스를 삭제하고
// 임포트를 지운 다음에
// 메뉴는 그대로 놔두면 에러죠?
// 이제 만들어볼게요
// (쭉 쓴다)

// 파일을 하나 따로 만들지, 아니면 하나의 파일에
// 두 개 이상의 컴포넌트를 만들지는
// 상황에 따라 달라요
// 리액트 개발자는 개발하면서 이 두가지 기법을
// 상황에 맞게 적절히 쓸 줄 알아야되요
// 같은 파일 안에 있는 두 개의 컴포넌트라도
// 부모자식 관계는 성립됩니다
// 하나만 기억하고 가자면,
// 주석으로 적어줄게요

// 하나의 컴포넌트는 하나의 역할만 해야합니다
// 그리고 이름에서 그 역할을 알 수 있어야 합니다

// 컴포넌트는 리액트트의 핵심적인 개념이기 때문에
// 모든 부분이 다 중요해요
// 이해될때까지 반복해서 봐주시길 바랍니다