// (ppt)
// 컴포넌트가 딱 하나 있는 웹앱을 만들 생각이면
// 굳이 리액트를 쓸 일이 없습니다
// 하나의 웹앱에는 적게는 여러개, 많개는 수십개
// 수백개의 컴포넌트가 들어갈 수 있습니다.
// 화면은 컴포넌트 구성의 예를 구글링해서 찾은거구요
// 이런 형태를 나무처럼 생겼다고 해서
// 트리 라고 합니다
// 하나의 부모 컴포넌트는 여러개의 자식컴포넌트를
// 가질 수 있습니다
// 예제 이미지를 분석해보면
// 크게 헤더와 메인페이지로 나뉘고
// 메인페이지는 다시
// 결과테이블
// 차트모델
// 왼쪽 네비게이션으로 나뉩니다
// 결과테이블은 다시 다른 자식컴포넌트를 가지구요
// 여러분도 여러분만의 웹앱을 개발하게 되면
// 코딩하기전에 UI를 미리 만들어놓고
// 다음과 같은 컴포넌트 트리를 미리 그려놓고 개발하게 될거에요
// (다음)
// 이건 제가 졸업과제로 만든 가계부 웹앱이에요
// 리액트로 작업하진 않았고 뷰제이에스라고
// 리액트의 경쟁 프레임워크 있는데
// 그걸 사용해서 만든 웹앱이구요
// (다음)
// 보시면 파란색부분이 컴포넌트입니다
// 개발하기전에 이렇게
// 유아이 만들고
// 계통도를 그려놓고 개발합니다
// 총 스물네개의 컴포넌트로 이루어져있어요
// 참고하시면 좋을거같아서 가져와봤구요
// (다음)
// 원래 화면으로 돌아와볼게요
// 컴포넌트 갯수보다 중요한 건,
// 컴포넌트간의 데이터 흐름입니다
// 여러분은 서버에 원하는 데이터를 요청하거나
// 데이터 수정 요청을 하게 될 것인데
// 그 데이터들은 어디서 관리를 하는 게 가장 좋을까요?
// 데이터는 최상단 컴포넌트인 앱에서 관리해야합니다
// 그렇게 안하면 작동 안된다는것이 아니라
// 리액트에서 권장하는 방식이에요
// 모든 데이터는 앱 컴포넌트에서 관리하고
// 받은 데이터를 자식에게 넘겨줘서
// 앱 컴포넌트의 데이터와
// 자손의 데이터가 일치하도록 만들어야합니다
// 이것을 구현하기 위해 우린 props를 사용해볼겁니다
// (다음)
// 참고로
// 앱에서 관리 안하고 따로 상태관리 라이브러리를 사용해서
// 데이터를 관리할수도 있어요
// 상태는 영어로는
// 스테이트라고 하는데 
// 지금은 일단 데이터라고만 알아둡시다
// 앱에서 오늘 배워볼 프롭스를 통해 관리 안하고
// 리액트 말고 다른 라이브러리를 써서
// 데이터를 관리할 수 있어요
// 실제로 실무에선 이렇게 많이 해요
// 대표적으로 레스트 에이피아이는 리덕스를 쓴다던가
// 그래프큐엘을 사용하고 싶으면 아폴로를 쓴다던가
// 할 수 있는데
// 굉장히~ 어렵습니다
// 아마 여러분들 전체 코딩시간의 40% - 60%가
// 상태관리하는데 쓰이게 될 거에요
// 그래서 여러분들에겐 안 가르칠 겁니다
// 우리는 쉽게 시작하는게 목적이기 때문에
// 프롭스만 알아볼게요

// (실습)
// 프로젝트 하나 새로 만들겠습니다
// 코드 샌드박스 메인에서
// 리액트 타입스크립트로 만들게요
// 디브 클래스네임 앱 안에 있는거 다 지워줍시다
// 우선 자식컴포넌트가 필요합니다.
// 앱 닷 티에스엑스에 바로 만들어도 되고
// 저는 파일을 따로 만들어줄게요
// 에스알씨 디렉토리 밑에
// 스튜던트 컴포넌트를 하나 만들겠습니다

export default function Student() {
  return (
    <>
      <h1>Student</h1>
    </>
  );
}

// 그리고 앱 닷 티에스엑스에서
// 임포트시켜주겠습니다
// 그러면 화면에 잘 뜨죠?
// 부모 자식 관계가 성립한거에요
// 앱 컴포넌트 안에 스튜던트 컴포넌트가 있죠
// 부모는 누구? 앱
// 자식은 누구? 스튜던트
// 우리의 목표는 앱의 데이터를
// 자식인 스튜던트로 내려보내는겁니다
// 그래서 다음과 같이 쓸겁니다

import "./styles.css";
import Student from "./Student";

export default function App() {
  return (
    <div className="App">
      <Student 
        name="조교행님"
        age={28}
        isGirlfriend={true}
        foo={[1, 2, 3, 4]}
      />
    </div>
  );
}

// 잘 봅시다. 총 다섯종류의 데이터를 내려보낼겁니다
// 이름, 나이, 여자친구 유무, 그리고 넘버 어레이
// 푸는 뭐냐면, 보통 아무 의미없는 단어를 말할 때
// 푸라고 해요
// 스트링의 경우엔 쌍따옴표로 써주면 되
// 나머지 자료형은 중괄호로 감싸주면 됩니다
// 에러는 일단 무시할게요 타입에러인데
// 나중에 인터페이스 달면 잘 작동될거거든요?

// 지금은 데이터를 안에서 직접 줬는데
// 바깥에서 데이터를 쓰고 가져올수도 있어요
// 이렇게
// 앱 컴포넌트 바깥에 써줄겁니다

// 스튜던트 닷 티에스엑스로 넘어가봅시다
// 이제 보내줬으니깐 받아야겠죠?
// 받을때는 한꺼번에 프롭스로 받습니다

// 프롭스는 무슨뜻일까?
// 프로퍼티스의 줄임말입니다
// 에스를 써서 복수에요
// 프롭스는 하나의 객체라고 이해해야합니다
// 부모에서 주는 객체
// 근데 타입스크립트 에러뜨죠?
// 왜? 객체가 파라미터로 들어가잖아요
// 인터페이스 써줘야되요
interface StudentInfo {
  name: string;
  age: number;
  isGirlfriend: boolean;
  foo: number[];
}
// 적어주면 에러가 사라진것을 보실 수 있어요
// 앱에서도 사라졌어요 

// 콘솔로그 한번 찍어보죠
// 잘 찍히죠?
// 네임 조교행님 나이는 이십팔세 등등등
// 잘 들어온것을 볼 수 있습니다
// 근데 우리가 모든걸 받고싶지 않을 수 있잖아요
// 에이지만 받고싶을 수 있어요 
// 그때는 이런식으로 씁니다
// 중괄호 주고 에이지 그리고 콜론 찍고 타입
// 인터페이스는 그대로 둘겁니다

// 콘솔로그 에이지로 바꿔보면
// 이십팔 잘 뜨죠?


// 이제 실제 화면에 한번 붙여보겠습니다
// 에이지로 쓰지 말고 프롭스로 다시 바꿀게요
// 콘솔로그는 지우고

// 디브 곱하기 네개
// 알트 누르고 커서 여러개 만든 다음에
// 보면 화면에 붙긴 붙었는데 이즈걸프렌드는 뜨지 않네요
// 불리언이라서 그래요

// 일단 예쁘게 다듬을게요
// 좀 더 보기 쉽게
// 이름
// 나이
// 여친유무
// 데이터들

// 여자친구 유무를 어떻게 활용하면 좋을까?
// 삼항연산자 배운거 기억나는지 모르겠네요
// 그걸 사용해서
// 트루면 여자친구 있음
// 펄스면 여친없음이 뜨도록 해볼게
// 중괄호를 삼항연산자 끝나는쪽으로 빼줘야되요
// 모두가 하나의 스트링으로 나올 것이기 때문에그래요
// 이 경우엔? 여자친구있음이 뜨죠?
// 반대의 경우엔?
// 펄스로 바꿔보면
// 여친없음이 뜨죠
// 다시 스튜던트로 돌아가서
// 삼항연산자는 화면에 붙일 때 자주 쓸 것이에요
// 모르면 타입스크립트 강의로 돌아가서 복습해주세요
// 옆에 프롭스 일일히 쓰는 게 싫으면 다음과 같이
// 쓸수도 있어요
// 컨트롤 디 해서 지워줄게요
// 프롭스로 한번에 받지 않고
// 프로퍼티를 하나하나 받았죠?
// 이 경우엔 프롭스를 안 붙여도 됩니다.

// 여기까지가 부모에서 자식으로 데이터를 넘겨주는
// 프롭스였습니다
// 지금은 딱 하나의 부모 자식 관계만 있었는데
// 손자 컴포넌트, 증손자 컴포넌트로 이어서 넘겨줄수도 있어요
// 이게 복잡해지면 일일히 흐름을 따라가기 어려워서
// 프롭스 대신에 아까 말했던 리덕스나, 아폴로를 통해
// 스태이트 매니지먼트, 상태 관리를 하기도 하는데
// 그걸 구현하는게 좀 많이 어려워요
// 저는 개인적으로,
// 개인프로젝트 한 세번정도 하고
// 아 정말 귀찮아 할때쯤 되면
// 그런 방법을 배워보는게 좋을거같아요

// (피피티)
// 핵심정리 한번 보고가죠
// 데이터는 최상위 컴포넌트인 앱에서 관리해서
// 자식으로 전달합니다
// 프롭스는 부모로부터 받은 객체이므로
// 인터페이스를 꼭 써줘야 합니다