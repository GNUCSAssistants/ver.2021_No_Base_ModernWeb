// (피피티)
// 프롭스 시간에 했는데
// 데이터는 어느 컴포넌트에서 관리한다그랬습니까?
// 앱에서 관리하죠
// 데이터, 즉 스테이트는
// 앱에서 관리하고
// 자식에게 프롭스로 내려보냅니다
// 스테이트는 어떻게 만듭니까?
// 저번시간에 배웠던 useState 훅으로 만들죠
// 그렇게 만든 스테이트를 프롭스로 자식컴포넌트,
// 손자컴포넌트에 내려보내고
// 스테이트를 연동할 수 있습니다
// 근데 만약에
// 그림의 중간부분인
// 콘트롤스헤더 컴포넌트에서
// state를 수정하고 싶다면 어떻게 하면 될까요?
// 콘트롤스헤더에서 스테이트를 수정할 수 있을까요?
// 그렇게 못합니다. 스테이트를 바꾸고싶다면
// 콘트롤스헤더가 아니라 
// 앱 컴포넌트에서 바꿔야되요
// 리액트는 단방향 데이터 흐름을 따라가기때문에
// 자식에서 부모의 스테이트를 못 바꿉니다
// 자식이 부모의 데이터를 함부로 다룰 수 없는거에요

// (다음)
// 이걸 그림으로 표현하면 다음과 같습니다
// 콘트롤스헤더가 부모인 리절트 테이블에
// 리절트테이블이 부모인 메인 페이지에
// 메인페이지가 부모인 앱에
// 스테이트 바꿔달라고 요청하면
// 앱에서 스테이트가 바뀌고
// 그 바뀐 값이 콘트롤스헤더에서 보여질 수 있는거에요
// 억수로 복잡하죠? 
// 근데 2019년 훅이 나온 뒤부터는
// 훨씬 간단해졌습니다

// (다음)
// 유즈스테이트 훅은 두 개의 리턴값을 낸다고 했죠?
// 하나는 스테이트, 또 하나는 스테이트를 변경하는방법인
// 셋 스테이트입니다
// 셋 스테이트를 프롭스로 내려보내기만 하면
// 콘트롤스헤더에서 프롭스로 내려받은 셋스테이트를 사용해
// 앱에 있는 스테이트를 바꿀 수 있는거에요
// 실습을 통해 알아봅시다

// (실습)
import { useState } from "react";
import "./styles.css";

export default function App() {
  const [count, setCount] = useState(0);
  return (
    <div className="App">
      <h1>App</h1>
      {count}
      <button onClick={() => setCount(count + 1)}>plus</button>
    </div>
  );
}

// 저번시간 코드에 이어서 하겠습니다
// 자식 컴포넌트를 하나 만들게요
// 차일드를 먼저 만들고
// 앱에서 임포트하겠습니다
// h1태그 앱 밑에 달아둘게요
// 그리고 화면에 붙일때 쓰는 카운트와
// 버튼을 차일드로 복사해줄게요
// 당연히 에러가 뜨죠
// 우리가 해야될 일은 뭘까?
// 카운트와 셋카운트를 프롭스로 내려보내는겁니다
<Child 
  count={count}
  setCount={setCount}
/>
// 안 헷갈리게 이름 똑같이 해줄게요
// 오른쪽에 있는게 앱에 있는 카운트와 셋카운트
// 왼쪽에 있는게 차일드컴포넌트에서 받을 카운트와 셋카운트
// 셋카운트는 함수라도 소괄호 안붙입니다
// 왜? 소괄호를 쓰면 실행시킨다는 뜻이니까요
// 차일드에서
// 프롭스로 받으면
// 뭐 해줘야된다했어요?
// 인터페이스는
// 프롭타입스라고 써줄게요

// 참고로 타입스크립트말고 자바스크립트로 리액트 개발할 때
// 프롭타입스라는 패키지가 엔피엠에 있어요
// 리액트에선 프롭스 타입체크를 제공안하기때문에
// 거의 필수적으로 쓰는 라이브러리입니다
// 그래서 이름이 헷갈릴수는 있어요

// 여기서 프롭타입스는 제가 그냥 지은 이름이고
// 프롭타입스라는 패키지가 아님을 알려드립니다
// 카운트는 넘버고
// 셋카운트는 펑션이죠
// 근데 좀 더 정확하게 써줍시다
// 펑션이라고 써줘도 작동은 잘 하는데
// 정확한 타입체크를 위해서
// 함수의 형태를 써줄거에요
setCount: (num: number) => void;
// 넘은 제가 그냥 지은 이름이고
// 파라미터로 넘버 타입 하나가 들어오고
// 리턴값은 보이드, 즉 아무것도 없는 값입니다
// 리턴값이 없을때 보이드라고 해요
// 영어사전 찾아보면 빈 공간이라는 뜻입니다
// 파라미터나 리턴값이 없으면 보이드타입입니다
// 그리고 빨간줄 여전히 뜨는데 왜?
// 앞에 프롭스 써줘야죠
// 프롭스라는 객체 안에 있는거잖아요

// 이제 화면을 보죠
// 앱 안에 플러스버튼을 눌러주면
// 증가하면서 동시에 차일드에 있는 카운트도 증가합니다
// 차일드에서 플러스버튼을 누르면
// 증가하면서 동시에 앱에 있는 카운트도 증가합니다
// 즉, 스테이트가 연동되었네요

// (피피티)
// 이제 진실을 이해해봅시다
// 단순히 생각하면
// 카운트와 셋카운트가 프롭스로 넘어가면서
// 복사되었다고 생각할 수 있어요
// 그러나 카운트와 셋카운트,
// 즉, 유즈스테이트가 리턴하는 두 개의 값인
// 스테이트와 셋스테이트는
// 앱 컴포넌트에만 존재합니다
// 차일드 컴포넌트에서는 단지
// 앱에 있는 카운트, 즉 스테이트를 보여주는것일 뿐이고
// 차일드에서 버튼을 클릭하면 단지,
// 앱에 있는 셋카운트, 즉 셋스테이트를 실행시키는것일
// 뿐입니다
// 모든 스테이트는 어디 있는거에요?
// 앱 컴포넌트에만 있습니다
// 모든 셋스테이트, 즉 스테이트를 변경하는 함수는
// 어디에 있어요?
// 앱 컴포넌트에만 있습니다
// 이런 방식으로 모든 스테이트를 앱에서 관리하고,
// 수정할 수 있습니다
// 여기까지하고 훅을 마칠께요
// 유즈이펙트라고
// 중요한 훅이 하나 더 있는데
// 지금은 가르치지 않습니다
// 나중에 프로젝트 코스를 따로 만들건데
// 그때 돔 조작과 디비에서 데이터 패치를 하게 되면
// 쓰일 일이 있을거에요 
// 그때 보면서 익히도록 하고
// 지금 당장은 가르치진 않겠습니다